ObTools ToDo:

Libs
----

XML:
 - Implement CDATA marked section

DB:
 - Transactions
 - Postgres last ID???  Maybe exec_insert(), returning ID inserted
   (quote table name, field name, whether already in transaction 
    - do insert, select max() within transaction)

CLI:
 - Provide help in groups if not recognised
 - Show group prefix in help

XMLMesh
------

Current:
  authentication/filtering of incoming msgs:
    MD5/SHA1 challenge (id, key)
    Symmetric challenge for client to prove server authentic?

  encryption of msgs:  DES/RSA like RMP

  Optional CLI for server

OTMP:
  Use thread pool for send threads in server

SOAP:
  Proper intermediate/final node behaviour on receipt of SOAP
  HTTP client and server - test against standard SOAP implementations


Future:
  Dynamic loading of modules?
  SSL
  Allow long-term correlation for registration/multiple response?

  Persistent guaranteed storage
  Persistent subscription
  Multipath resilience - keep time-limited map of message [orig,id], 
    suppress duplicates   

  Synchroniser module - respond immediately and allow asynchronous 
    poll of real results later

  Optimise XML parse for subject - just read start tag
    OR
  Optimise XML parse for headers - provide 'stop at end of XX' marker
    - keep rest as special extra unparsed element, to allow changes to header
    - spool unparsed element out at end
    - hence alternatively, don't parse into env:Body

XMITools
--------
Toolgen library:
 - Make regen optional
 - Auto read config items with xpath - option to override on CLI
 - xt:init code goes into main()

xmltoolgen:
 - Test tool - use some config items

xmitoolgen:

obdoc:
 - Provide mechanism for file header/footer
 - Provide summary TOC
 - Allow global variables 

<RELEASE 1>

O/R mapping tool:
- GPL'ed
- Need database connection library - do MySQL, Postgres first
- Initially manual load/save - associations give refs, have to load manually

<RELEASE 2>

ObCache 1:
- Auto load from SQL on demand
- Smart pointers/dirty bits for load/save

<RELEASE 3>

ObCache 2:
- Distributed
- Generalise transport mechanism

- Object references are constructed XML, with MD5sum hash for fast lookup

  // Plain object
  <object class="foo" oid="5830809"/>

  // Association
  <association>
    <source class="foo" oid="549594"/>
    <dest class="bar" role="parent"/>
    <filter type="xxx">...</filter>
    <sort type="yyy">...</sort>
  </association>

  // MD5 hash
  <fetch>
    <hash type="md5">439ac23de4</hint>
    <object .../>
  </fetch>

General
-------

- Licence on release
 
